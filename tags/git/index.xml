<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>git on ebullient·works</title><link>/tags/git.html</link><description>Recent content in git on ebullient·works</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 25 Oct 2019 00:00:00 +0000</lastBuildDate><atom:link href="/tags/git/index.xml" rel="self" type="application/rss+xml"/><item><title>Scripts for the win! Updating git repositories for the lazy.</title><link>/2019/10/25/scripts-for-the-win-updating-git-repositories-for-the-lazy.html</link><pubDate>Fri, 25 Oct 2019 00:00:00 +0000</pubDate><guid>/2019/10/25/scripts-for-the-win-updating-git-repositories-for-the-lazy.html</guid><description>&lt;p>I love scripts! I treat them as my extended memory. Blog posts used to do this,
but life and children have eaten up the capacity I used to have for writing.&lt;/p>
&lt;p>But I thought I would share my latest script for the lazy (which I have now duplicated several times. I know, I know. WET, DRY. I can't be bothered). This script iterates over all of the git repositories in a sub-directory (where I have several related ones), fetches everything, fast-forwards if it can, and otherwise tries to rebase on the upstream branch if there is one that matches.&lt;/p>
&lt;p>There is an extra case statement at the bottom as I inevitably extend this to do
more things specific to this group of projects. This kind of approach grew out
of the scripts written for Game On!, which still work well, and do their extra
duty reminding me what on earth I was doing the last time I worked on it.&lt;/p></description></item><item><title>Git with edit on an iPad?</title><link>/2017/11/12/git-on-ipad.html</link><pubDate>Sun, 12 Nov 2017 00:00:00 +0000</pubDate><guid>/2017/11/12/git-on-ipad.html</guid><description>We shall see how this goes over time, but so far? Oh hell yes.
I am experimenting with a cute little app (I have, sad to say, fallen head over feet into the Apple ecosystem. Other devices might seem cool, but not worth the gymnastics. Ecosystem stickiness is a thing.) that allows me to edit. code. from. my. iPad.
Why would I want to do that?
Device junky that I am, I totes splurged and got an iPad Pro, with its little keyboard. I would really really really like to make more entries to this blog, for example. This is a nice alternative to hauling laptop around. I want to see how far I can push this über tiny device thing, that ALSO happens to have a stylus (yes, I am one of those people that thinks better long-hand). So exciting!
The one challenge with this, in particular, is that I can’t get the Jekyll preview that I could if I were running locally. The iPad Pro is quite the workhorse&amp;hellip; but it doesn’t (yet, ha!) run Docker containers.
Oh, right. The app: Working Copy. It also integrates with iOctocat.</description></item><item><title>Shell prompt crazy for Git Submodules</title><link>/2015/12/16/shell-prompt-crazy-for-git-submodules.html</link><pubDate>Wed, 16 Dec 2015 00:00:00 +0000</pubDate><guid>/2015/12/16/shell-prompt-crazy-for-git-submodules.html</guid><description>I've run a somewhat odd little script to generate my command prompt for years now, sets some colors, adds some indicators of what kind of shell I'm in (sudo or tmux/screen or ssh or.. ).
Given I now have to work with git and submodules, I've revised that to include information provided about git generated by this script: https://github.com/git/git/blob/master/contrib/completion/git-prompt.sh
The difference is worth it, in understanding at a glance what is going on without typing git status or variant every two seconds. ;)
I've also been using some very useful aliases to make working with submodules sane, as documented here: Game On! Advanced Adventures / Git Submodules</description></item></channel></rss>