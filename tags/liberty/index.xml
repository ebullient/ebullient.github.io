<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>liberty on ebullient·works</title><link>/tags/liberty.html</link><description>Recent content in liberty on ebullient·works</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 27 Nov 2017 00:00:00 +0000</lastBuildDate><atom:link href="/tags/liberty/index.xml" rel="self" type="application/rss+xml"/><item><title>Java EE ebullience — airhacks.fm podcast with Adam Bien</title><link>/2017/11/27/airhacks-fm.html</link><pubDate>Mon, 27 Nov 2017 00:00:00 +0000</pubDate><guid>/2017/11/27/airhacks-fm.html</guid><description>I spent an excellent few hours recording a podcast with Adam Bien!</description></item><item><title>Game On! Explore microservices with a text-based adventure</title><link>/2016/05/16/game-on-explore-microservices-with-a-text-based-adventure.html</link><pubDate>Mon, 16 May 2016 00:00:00 +0000</pubDate><guid>/2016/05/16/game-on-explore-microservices-with-a-text-based-adventure.html</guid><description>Microservices: the buzz is everywhere. Given the breadth of technologies related to the term, it can be difficult to get a full picture of what a Microservices architecture should look like, or to understand why it is said that microservices architectures both remove and introduce complexity at the same time. Game On! is a throwback text-based adventure built to help you explore microservices concepts.
Continue with post on IBM developerWorks</description></item><item><title>Swagger-first API design</title><link>/2016/01/27/swagger-first-api-design.html</link><pubDate>Wed, 27 Jan 2016 00:00:00 +0000</pubDate><guid>/2016/01/27/swagger-first-api-design.html</guid><description>&lt;p>I've been working for the past few months on building Game On! a microservices-based application that is intended to show both what a microservices architecture looks like, and to make it easy for people to play with such a system without having to start from the ground up themselves.&lt;/p>
&lt;p>We started with a best-guess set of services, and over time, it became pretty apparent that our first pass at a map building service (the Concierge) was both misleading in purpose and insufficient in function. It did serve its purpose, filling in for service discovery in a way, but we were growing beyond what the service could do. &lt;/p></description></item><item><title>Microservices and WAS Liberty</title><link>/2015/12/11/microservices-and-was-liberty.html</link><pubDate>Fri, 11 Dec 2015 00:00:00 +0000</pubDate><guid>/2015/12/11/microservices-and-was-liberty.html</guid><description>Home to Microservices and WAS Liberty resources, which provide background information, getting started guidance, best practices, and methodologies.
Continue with post on IBM developerWorks</description></item><item><title>Secure Microservices: API Keys, Access Tokens, and Signed JWTs</title><link>/2015/12/04/secure-microservices-api-keys-access-tokens-and-signed-jwts.html</link><pubDate>Fri, 04 Dec 2015 00:00:00 +0000</pubDate><guid>/2015/12/04/secure-microservices-api-keys-access-tokens-and-signed-jwts.html</guid><description>Some samples demonstrating how to secure your microservices using API keys, access tokens, and JSON Web Tokens (JWTs).
Continue with post on IBM developerWorks</description></item><item><title>Using Grok filters to parse Liberty Logs</title><link>/2015/09/02/logstash-and-liberty-optimizing-data-collection-for-the-cloud.html</link><pubDate>Wed, 02 Sep 2015 00:00:00 +0000</pubDate><guid>/2015/09/02/logstash-and-liberty-optimizing-data-collection-for-the-cloud.html</guid><description>Logstash is a core part of the ELK stack that can be used to pull and tag content in WAS Liberty logs. This post walks through how to configure Logstash to collect and format WAS Liberty logs.
Continue with post on IBM DeveloperWorks</description></item><item><title>Don't Wait! Play with Async EE7 instead</title><link>/2015/08/21/don-t-wait-build-responsive-applications-with-java-ee-7-instead.html</link><pubDate>Fri, 21 Aug 2015 00:00:00 +0000</pubDate><guid>/2015/08/21/don-t-wait-build-responsive-applications-with-java-ee-7-instead.html</guid><description>An overview of what Java EE 7 brings in support of responsive applications with samples on GitHub. These samples were also used at IBM InterConnect earlier in the year.
Continue with post on IBM DeveloperWorks</description></item><item><title>Building portable, 12-factor microservices with WAS Liberty and Bluemix</title><link>/2015/08/12/building-portable-12-factor-microservices-with-was-liberty-and-bluemix.html</link><pubDate>Wed, 12 Aug 2015 00:00:00 +0000</pubDate><guid>/2015/08/12/building-portable-12-factor-microservices-with-was-liberty-and-bluemix.html</guid><description>An overview of 12-factor applications, and how a 12-factor application can be built using WAS Liberty and Bluemix.
Continue with post on IBM DeveloperWorks</description></item></channel></rss>