<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rails on ebullient·works</title><link>/tags/rails.html</link><description>Recent content in rails on ebullient·works</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 04 Jan 2010 00:00:00 +0000</lastBuildDate><atom:link href="/tags/rails/index.xml" rel="self" type="application/rss+xml"/><item><title>Upgrading old rails apps...</title><link>/2010/01/04/upgrading-old-rails-apps.html</link><pubDate>Mon, 04 Jan 2010 00:00:00 +0000</pubDate><guid>/2010/01/04/upgrading-old-rails-apps.html</guid><description>&lt;p>I have to say that updating RoR for old apps always lands me in some wonky funny business: missing config variables, moved whatsits and thingummies. grr. The issues aren't easy to search for, either.&lt;/p></description></item><item><title>Rails: Staying away from Enums in Migrations</title><link>/2006/12/29/rails-staying-away-from-enums-in-migrations.html</link><pubDate>Fri, 29 Dec 2006 00:00:00 +0000</pubDate><guid>/2006/12/29/rails-staying-away-from-enums-in-migrations.html</guid><description>I was fiddling with migrations, and found these regarding the use of MySQL-ish ENUMs in Migrations:
Enum fields in migrations? [rails.techno-weenie.net] HowtoUseSetAndEnumColumns [wiki.rubyonrails.com] Basically, ENUMs aren't supported, and using Validations might be a good work-around, but is dependent on you putting (and keeping) all of the logic in your Rails app. If you need to go cross-app (with some other thing that ain't rails), then use CHECK or other DB constraints to enforce desired values.</description></item><item><title>Rails: Printing validation errors as flash notices</title><link>/2006/07/11/rails-printing-validation-errors-as-flash-notices.html</link><pubDate>Tue, 11 Jul 2006 00:00:00 +0000</pubDate><guid>/2006/07/11/rails-printing-validation-errors-as-flash-notices.html</guid><description> I am quite sure someone has already found this simple solution, but when I poked around, I couldn't find it.
Here is my snippet to print out the error messages resulting from a validation as a flash notice:
if @user.save flash[:'notice'] = &amp;quot;New user saved successfully.&amp;quot; elsif !@user.errors.empty? flash[:'notice'] = &amp;quot;Could not save new user: &amp;quot; &amp;lt;&amp;lt; @user.errors.full_messages.join(&amp;quot;; &amp;quot;) end</description></item><item><title>Ruby and Rails</title><link>/2006/03/05/rails.html</link><pubDate>Sun, 05 Mar 2006 00:00:00 +0000</pubDate><guid>/2006/03/05/rails.html</guid><description>&lt;p>So. I'm fiddling. again. with Ruby on Rails. because it's trendy.&lt;/p>
&lt;p>I have to say, it's also handy. Very nice not to have to write the entire DB framework just to make an app! The problem that I have is I'm such a habitual programming dork that I find Ruby's syntax a little odd...&lt;/p></description></item></channel></rss>