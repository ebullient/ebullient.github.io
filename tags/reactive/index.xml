<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>reactive on ebullient·works</title><link>/tags/reactive.html</link><description>Recent content in reactive on ebullient·works</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 24 Oct 2018 00:00:00 +0000</lastBuildDate><atom:link href="/tags/reactive/index.xml" rel="self" type="application/rss+xml"/><item><title>Oracle CodeOne 2018: Reactive Java? Let Us Count the Ways</title><link>/2018/10/24/oracle-codeone-2018-reactive-java-let-us-count-the-ways.html</link><pubDate>Wed, 24 Oct 2018 00:00:00 +0000</pubDate><guid>/2018/10/24/oracle-codeone-2018-reactive-java-let-us-count-the-ways.html</guid><description>Jabberwocky.
I can&amp;rsquo;t make conference materials with a straight-face when left to my own devices, I just can&amp;rsquo;t!
Reactive paradigms can be confusing, so Ozzy and I put this workshop together.
First, we give an overview of reactive operators. Using the Jabberwocky as input, we present participants with problems to solve.
First with RxJava, then with Spring WebFlux, and finally with Akka.
It was fun. ;)
The repo: https://github.com/IBM/reactive-code-workshop
Other references:
https://openliberty.io/blog/2018/10/18/meet-us-at-oc1-and-ece.html</description></item><item><title>JavaOne 2017: Introduction to Reactive Systems</title><link>/2017/10/05/javaone-introduction-to-reactive-systems.html</link><pubDate>Thu, 05 Oct 2017 00:00:00 +0000</pubDate><guid>/2017/10/05/javaone-introduction-to-reactive-systems.html</guid><description>A Joint adventure with Lightbend, we lead folks in the workshop through a specialized version of our Game On! Text Adventure..
IBM and Lightbend are teaming up to introduce you to developing reactive microservices on Kubernetes. Lagom is a microservice framework built atop Lightbend’s tried-and-proven distributed systems toolkit, Akka. This framework helps you build microservices as systems—reactive systems, to be precise—so that your microservices are elastic and resilient by nature. The reactive programming model aims to ensure systems availability and performance while processing streaming data. You will use Lagom’s development environment to avoid tedious setup and scripting when developing locally and will deploy your application to a Kubernetes cluster, so others in the workshop (and at JavaOne) can test out what you built.
Slides: Why Reactive? With GameOn
Getting ready for our lab this afternoon -- HOL7896 at 4:30 PDT today! https://t.co/R3qrmisqL1
&amp;mdash; Erin Schnabel (@ebullient@mastodon.social) (@ebullientworks) October 2, 2017 https://github.com/lagom/lagom-gameon-example https://github.com/lagom/lagom-gameon-maven-archetype</description></item></channel></rss>